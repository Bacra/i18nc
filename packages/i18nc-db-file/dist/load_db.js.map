{"version":3,"sources":["../src/load_db.js"],"names":["Promise","require","fs","promisifyAll","glob","path","debug","i18ncPO","i18ncDB","stripBOM","extend","globAsync","promisify","ArrayConcat","Array","prototype","concat","exports","module","autoLoadDB","loaders","loadPOFile","loadByRequireSync","sync","autoLoadDBSync","loadersSync","loadPOFileSync","inputs","isArray","map","input","update","statAsync","stats","isFile","loadDBFile","isDirectory","loadDBFiles","Error","concurrency","dataArr","extendDB","file","extname","handler","inputDir","cwd","nodir","absolute","files","sort","readFileAsync","encoding","content","parse","statSync","loadDBFileSync","loadDBFilesSync","readFileSync","dbs","arr","apply"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Promise     = require('bluebird');\nconst fs          = Promise.promisifyAll(require('fs'));\nconst glob        = require('glob');\nconst path        = require('path');\nconst debug       = require('debug')('i18nc-db-file');\nconst i18ncPO     = require('i18nc-po');\nconst i18ncDB     = require('i18nc-db');\nconst stripBOM    = require('strip-bom');\nconst extend      = require('extend');\nconst globAsync   = Promise.promisify(glob);\nconst ArrayConcat = Array.prototype.concat;\n\nexports = module.exports = autoLoadDB;\nexports.loaders =\n{\n\t'.po': loadPOFile,\n\t'.js': loadByRequireSync,\n\t'.json': loadByRequireSync,\n};\n\nexports.sync = autoLoadDBSync;\nexports.loadersSync =\n{\n\t'.po': loadPOFileSync,\n\t'.js': loadByRequireSync,\n\t'.json': loadByRequireSync,\n};\n\n\n\nasync function autoLoadDB(inputs)\n{\n\tif (!Array.isArray(inputs)) inputs = [inputs];\n\n\tlet dataArr = await Promise.map(inputs, async function(input)\n\t\t{\n\t\t\tif (typeof input == 'object') return i18ncDB.update(input);\n\n\t\t\tlet stats = await fs.statAsync(input);\n\n\t\t\tif (stats.isFile())\n\t\t\t\treturn loadDBFile(input);\n\t\t\telse if (stats.isDirectory())\n\t\t\t\treturn loadDBFiles(input);\n\t\t\telse\n\t\t\t\tthrow new Error('Input Is Not File Or Directory');\n\t\t},\n\t\t{\n\t\t\tconcurrency: 5\n\t\t});\n\n\treturn extendDB(dataArr);\n}\n\nasync function loadDBFile(file)\n{\n\tlet extname = path.extname(file);\n\tlet handler = exports.loaders[extname];\n\tif (handler) return handler(file);\n}\n\n/**\n * 从po文件中读取dbTranslateWords结构体\n */\nasync function loadDBFiles(inputDir)\n{\n\tdebug('sacn dir:%s', inputDir);\n\n\tlet files = await globAsync('**/*', {cwd: inputDir, nodir: true, absolute: true})\n\treturn Promise.map(files.sort(), function(file)\n\t\t{\n\t\t\tdebug('load dir file:%s', file);\n\t\t\treturn loadDBFile(file);\n\t\t},\n\t\t{\n\t\t\tconcurrency: 5\n\t\t});\n}\n\nasync function loadPOFile(file)\n{\n\tlet content = await fs.readFileAsync(file, {encoding: 'utf8'});\n\n\tcontent = stripBOM(content);\n\treturn i18ncPO.parse(content);\n}\n\n\n\nfunction autoLoadDBSync(inputs)\n{\n\tif (!Array.isArray(inputs)) inputs = [inputs];\n\n\tlet dataArr = inputs.map(function(input)\n\t{\n\t\tif (typeof input == 'object') return i18ncDB.update(input);\n\n\t\tlet stats = fs.statSync(input);\n\n\t\tif (stats.isFile())\n\t\t\treturn loadDBFileSync(input);\n\t\telse if (stats.isDirectory())\n\t\t\treturn loadDBFilesSync(input);\n\t\telse\n\t\t\tthrow new Error('Input Is Not File Or Directory');\n\t});\n\n\treturn extendDB(dataArr);\n}\n\n\nfunction loadDBFileSync(file)\n{\n\tlet extname = path.extname(file);\n\tlet handler = exports.loadersSync[extname];\n\tif (handler) return handler(file);\n}\n\n\n/**\n * 从po文件中读取dbTranslateWords结构体\n */\nfunction loadDBFilesSync(inputDir)\n{\n\tdebug('sacn dir:%s', inputDir);\n\tlet files = glob.sync('**/*', {cwd: inputDir, nodir: true, absolute: true});\n\treturn files.sort().map(loadDBFileSync);\n}\n\nfunction loadPOFileSync(file)\n{\n\tlet content = fs.readFileSync(file, {encoding: 'utf8'});\n\tcontent = stripBOM(content);\n\treturn i18ncPO.parse(content);\n}\n\n\nfunction loadByRequireSync(file)\n{\n\treturn i18ncDB.update(require(file));\n}\n\nfunction extendDB(dbs)\n{\n\tlet arr = ArrayConcat.apply([true, {}], dbs);\n\treturn extend.apply(null, arr);\n}\n"],"file":"load_db.js"}